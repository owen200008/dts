<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.utopia.data.transfer.admin.dao.mapper.base.PairBeanRepository">
  <resultMap id="BaseResultMap" type="com.utopia.data.transfer.admin.dao.entity.PairBean">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="pipeline_id" jdbcType="INTEGER" property="pipelineId" />
    <result column="source_datamedia_id" jdbcType="INTEGER" property="sourceDatamediaId" />
    <result column="target_datamedia_id" jdbcType="INTEGER" property="targetDatamediaId" />
  </resultMap>


  <resultMap id="excludeResultMap" type="com.utopia.data.transfer.admin.dao.entity.PairDetail">
    <result column="sourceName" jdbcType="VARCHAR" property="sourceName"></result>
    <result column="sourceDatamediaId" jdbcType="INTEGER" property="sourceDatamediaId"></result>
    <result column="sourceNamespace" jdbcType="VARCHAR" property="sourceNamespace"></result>
    <result column="sourceTable" jdbcType="VARCHAR" property="sourceTable"></result>
    <result column="targetName" jdbcType="VARCHAR" property="targetName"></result>
    <result column="targetDatamediaId" jdbcType="INTEGER" property="targetDatamediaId"></result>
    <result column="targetNamespace" jdbcType="VARCHAR" property="targetNamespace"></result>
    <result column="targetTable" jdbcType="VARCHAR" property="targetTable"></result>
    <result column="rule" property="rule" jdbcType="VARCHAR"></result>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, pipeline_id, source_datamedia_id, target_datamedia_id
  </sql>



  <select id="selectByPipelineId" parameterType="java.lang.Integer" resultMap="excludeResultMap">
    SELECT
	*
    FROM
	(
	SELECT
		so.id AS sourceDatamediaId,
		so.namespace AS sourceNamespace,
		so.TABLE AS sourceTable,
		so.name as sourceName
	FROM
		u_pipeline pi
		INNER JOIN u_pair pa ON pi.id = pa.pipeline_id
		INNER JOIN u_source_datamedia so ON pa.source_datamedia_id = so.id
	WHERE
		pi.id = #{id}
	) AS source,
	(
	SELECT
		ta.id AS targetDatamediaId,
		ta.namespace AS targetNamespace,
		ta.TABLE AS targetTable,
		ta.name as targetName,
		ta.rule AS rule
	FROM
		u_pipeline pi
		INNER JOIN u_pair pa ON pi.id = pa.pipeline_id
		INNER JOIN u_target_datamedia ta ON pa.target_datamedia_id = ta.id
	WHERE
		pi.id = #{id}
	) AS target
  </select>
</mapper>